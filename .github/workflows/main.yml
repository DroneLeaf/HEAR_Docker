name: Build and Deploy

on:
  # workflow_dispatch: {}
  push:
    branches: [ "CD" ]

env:
  applicationfolder: src
  AWS_REGION: me-south-1
  S3BUCKET: ##s3-bucket## 


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Set up JDK 1.8
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: 1.8

      - name: chmod
        run: chmod -R +x ./.github

      - name: Get Actor ID
        id: get_actor_id
        run: |
             echo "::set-output name=actor_id::$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/users/${{ github.actor }} | jq -r .id)"


      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest
        run: |
          echo ${{ github.triggering_actor }}
          echo ${{ secrets.GITHUB_TOKEN }}
          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_2 \
          --progress=plain \
          --build-arg GITHUB_ID="${{ github.triggering_actor }}" \
          --build-arg GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN  }}" \
          --build-arg TARGET_UBUNTU="ON" \
          --build-arg USERNAME="pi" \
          --build-arg WS_NAME="HEAR_FC"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Build and Package Maven
      #   id: package
      #   working-directory: ${{ env.applicationfolder }}
      #   run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      # - name: Upload Artifact to s3
      #   working-directory: ${{ env.applicationfolder }}/target
      #   run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name HearArchCodeDeploy --deployment-group-name HearArchCodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
